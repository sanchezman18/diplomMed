@model diplomMed.Models.EquipmentViewModel
@using diplomMed.Infrastructure;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    ViewData["Title"] = "Index";
}

<h2>Выбор оборудования для комплектации автомобиля сорой помощи. </h2>
<form asp-controller="EquipmentU" asp-action="Index" method="get">
    <p>
        Страна производства: <select asp-for="DefCountry" asp-items="Model.Countries">
            <option value="">Все</option>
        </select>
        Вид прибора: <select asp-for="EquipType" asp-items="Model.EquipTypes">
            <option value=""></option>
        </select>
        Класс АСМП: <select asp-for="defCateg" asp-items="Model.Categs">
            <option value=""></option>
        </select>
        <!--  <input type="submit" value="Применить" /> -->
       <!-- <a asp-action="About" asp-controller="Home" method="get">Информация</a>-->
    </p>
    <br>
    Искать по цене от <input type="text" asp-for="numOne" /> до <input type="text" asp-for="numTwo" />
    <!--<a asp-action="About" asp-controller="Home" method="get">Информация</a>-->
    <input type="submit" value="Применить" />
</form>


<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Equips[0].Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equips[0].EquipType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equips[0].Developer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equips[0].Model)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Equips[0].Price)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model.Equips)
        {



            <tr>
                @if (item.Photo != null)
                {
                <td>
                    <img style='width:80px; height:60px;' src="data:image/jpeg;base64,@(Convert.ToBase64String(item.Photo))" />
                </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.EquipType)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Developer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>

                <td>
                   @Html.DisplayFor(modelItem => item.Price)
                </td>

                <td>
                    <form asp-route-id="@item.Id" asp-action="Details" asp-controller="EquipmentU" method="post">
                        <input type="hidden" asp-for="@item.Id" />
                        <input type="hidden" name="returnURL"
                               value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                        <button type="submit">
                            Характеристики
                        </button>
                    </form>|
                    <form asp-route-id="@item.Id" asp-action="AddToCart" asp-controller="Cart" method="post">
                        <input type="hidden" asp-for="@item.Id" />
                        <input type="hidden" name="returnURL"
                               value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                        <button type="submit">
                            Выбрать
                        </button>
                    </form>

                </td>
            </tr>

        }
      
    </tbody>
</table>

@try
{
    if (Model.Equips[0] == null)
    {

    }
}
catch (Exception e)
{
    <p>Введен некорректный запрос! Пожалуйста повторите еще раз.</p>
}
